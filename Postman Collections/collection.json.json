{
  "info": {
    "_postman_id": "4aafda95-2f41-463c-bfa4-f9ee243747d0",
    "name": "<h1>DHAWAN <a href='www.google.com'>google!</a></h1>",
    "description": "Makes four requests to HTTPBin (httpbin.org) and tests Newman",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "GET with URL Params",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ce386e0a-af56-4254-bb08-b53b7065679e",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "let jsonData = pm.response.json();",
              "",
              "pm.test(\"Your test name\", function () {",
              "    pm.response.to.have.status(200);",
              "    pm.expect(jsonData.args.isGood).to.eql('true');",
              "    pm.expect(jsonData.args.isBad).to.eql('false');",
              "});",
              "",
              "",
              "pm.sendRequest('https://postman-echo.com/get', function (err, res) {",
              "    if (err) {",
              "        console.log(err);",
              "    } else {",
              "        console.log(pm.response);",
              "        pm.environment.set(\"rahul\", \"dhawan\");",
              "    }",
              "});",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "50311adf-7ed0-4680-9ccc-bd51e6fea13e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{url}}/get?isGood=true&isBad=false",
          "host": [
            "{{url}}"
          ],
          "path": [
            "get"
          ],
          "query": [
            {
              "key": "isGood",
              "value": "true"
            },
            {
              "key": "isBad",
              "value": "false"
            }
          ]
        },
        "description": "Simple GET request with URL Parameters"
      },
      "response": [
        {
          "id": "fcd15c42-a143-4caf-8080-4a148c47eee3",
          "name": "GET with URL Params",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{url}}/get?isGood=true&isBad=false",
              "host": [
                "{{url}}"
              ],
              "path": [
                "get"
              ],
              "query": [
                {
                  "key": "isGood",
                  "value": "true"
                },
                {
                  "key": "isBad",
                  "value": "false"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Fri, 10 Jan 2020 10:51:54 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"16a-fo+mPCjXXSGJH+Z2yr+Yl9uIG54\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A94s_KtV754RYJ3wmbBzJkq1XL27kPpKO.ihmeWqqd%2BxOQrlOSy%2BTDByNWnh7BNb%2Bz2BHxOdBQgXI; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "258"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"args\": {\n        \"isGood\": \"true\",\n        \"isBad\": \"false\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"135b79a5-8b3a-4fd4-90cb-20b45dac6f43\",\n        \"user-agent\": \"PostmanRuntime/7.21.0\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"info\": {\n    \t\"CreaterName\" : \"Rahul Dhawan\",\n    \t\"Work Profile\" : \"Security ENgineer\",\n    \t\"company\" : \"Postman Inc.\"\n    },\n    \n    \"url\": \"https://postman-echo.com/get?isGood=true&isBad=false\"\n}"
        }
      ]
    },
    {
      "name": "POST with JSON body",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ad9d3a46-7b6c-4a00-bb65-a9b1a20b2b39",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "f9a91da0-c4ff-4e75-aae7-8dee851ea828",
            "exec": [
              "let date = Date.now();",
              "",
              "pm.globals.set(\"currentDate\", date);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "7281367a-252e-4872-ab92-35b949af8820",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"john\",\n    \"permissions\": [2000,3000,4000]\n}",
          "options": {
            "raw": {}
          }
        },
        "url": "{{url}}/post"
      },
      "response": []
    },
    {
      "name": "PUT with form data",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "32693232-6612-40f0-a178-9244cd55d6ac",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Test form data\", function () {",
              "    let data = pm.response.json();",
              "    pm.expect(data.form.username).to.eql(\"johndoe\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "49cee15e-b8ad-44ea-99b2-4a2534f10f62",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "username",
              "value": "johndoe",
              "type": "text"
            }
          ],
          "options": {
            "urlencoded": {}
          }
        },
        "url": "{{url}}/put"
      },
      "response": []
    },
    {
      "name": "DELETE request",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d4139d2e-ad9f-4594-ad7d-b8e2d8c0925f",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "1a397b33-146c-4d1d-adfe-10f13e280f36",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "DELETE",
        "header": [],
        "url": "{{url}}/delete"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "0d1445d8-276e-4be5-aa6e-ece6419c82ec",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "e5595d47-e85b-4815-b441-78bf566f8ebd",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}